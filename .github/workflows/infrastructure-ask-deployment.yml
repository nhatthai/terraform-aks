name: 'Infrastructure AKS'

on:
  push:
    branches:
      - main
    paths:
      - terraform/**
      - .github/workflows/**

jobs:
  terraform-test:
    name: 'Terraform TEST'
    runs-on: ubuntu-latest
    environment: TEST

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      STORAGE_ACCOUNT: storageakstest
      CONTAINER_NAME:  aks-container-test
      ENVIRONMENT: TEST

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Terraform Init
      shell: bash
      working-directory: './terraform'
      run: |
        terraform init -backend-config="storage_account_name=${{ env.STORAGE_ACCOUNT }}" -backend-config="container_name=${{ env.CONTAINER_NAME }}" -backend-config="key=${{ env.ENVIRONMENT }}.aks.tfstate" -var "environment=${{ env.ENVIRONMENT }}"

    - name: Terraform Validate
      shell: bash
      working-directory: './terraform'
      run: terraform validate

    - name: Terraform Plan
      shell: bash
      working-directory: './terraform'
      run: |
        terraform plan -input=false -var-file="terraform.tfvars" -var "aks_service_principal_app_id=${{ secrets.AZURE_AD_CLIENT_ID }}"  -var "aks_service_principal_client_secret=${{ secrets.AZURE_AD_CLIENT_SECRET }}" -var "environment=${{ env.ENVIRONMENT }}"

    - name: Terraform Apply
      shell: bash
      working-directory: './terraform'
      run: terraform apply -auto-approve -input=false -var-file="terraform.tfvars" -var "aks_service_principal_app_id=${{ secrets.AZURE_AD_CLIENT_ID }}" -var "aks_service_principal_client_secret=${{ secrets.AZURE_AD_CLIENT_SECRET }}" -var "environment=${{ env.ENVIRONMENT }}"

    - name: Terraform Output
      id: terraform_outputs
      shell: bash
      working-directory: './terraform'
      run: |
        kube_config=$(terraform output kube_config)

    - run: echo "${{ steps.terraform_outputs.outputs.kube_config }}"

  terraform-stage:
    needs: [terraform-test]
    name: 'Terraform STAGE'
    runs-on: ubuntu-latest
    environment: STAGE

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      STORAGE_ACCOUNT: storageaksstaging
      CONTAINER_NAME: aks-container-stage
      ENVIRONMENT: STAGE

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Terraform Init
      shell: bash
      working-directory: './terraform'
      run: |
        terraform init -backend-config="storage_account_name=${{ env.STORAGE_ACCOUNT }}" \
        -backend-config="container_name=${{ env.CONTAINER_NAME }}"
        -backend-config="key=${{ env.ENVIRONMENT }}.aks.tfstate"
        -var "environment=${{ env.ENVIRONMENT }}"

    - name: Terraform Validate
      shell: bash
      working-directory: './terraform'
      run: terraform validate

    - name: Terraform Plan
      shell: bash
      working-directory: './terraform'
      run: |
        terraform plan -input=false -var-file="terraform.tfvars" \
          -var "aks_service_principal_app_id=${{ secrets.AZURE_AD_CLIENT_ID }}"  \
          -var "aks_service_principal_client_secret=${{ secrets.AZURE_AD_CLIENT_SECRET }}" \
          -var "aks_service_principal_object_id =${{ secrets.AZURE_SERVICE_PRINCIPAL_OBJECT_ID }}" \
          -var "environment=${{ env.ENVIRONMENT }}"

    - name: Terraform Apply
      shell: bash
      working-directory: './terraform'
      run: terraform apply -auto-approve -input=false -var-file="terraform.tfvars" \
        -var "aks_service_principal_app_id=${{ secrets.AZURE_AD_CLIENT_ID }}" \
        -var "aks_service_principal_client_secret=${{ secrets.AZURE_AD_CLIENT_SECRET }}" \
        -var "aks_service_principal_object_id =${{ secrets.AZURE_SERVICE_PRINCIPAL_OBJECT_ID }}" \
        -var "environment=${{ env.ENVIRONMENT }}"

    - name: Terraform Output
      id: terraform_outputs
      shell: bash
      working-directory: './terraform'
      run: |
        kube_config=$(terraform output kube_config)

    - run: echo "${{ steps.terraform_outputs.outputs.kube_config }}"